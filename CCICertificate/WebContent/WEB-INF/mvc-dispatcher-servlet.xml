<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DJ autoscan configuration -->
	<context:component-scan base-package="cci" />
	<mvc:annotation-driven />

	<mvc:interceptors>
		<bean class="cci.web.controller.LogInterceptor" />
	</mvc:interceptors>

	<!-- View resolver config JSP standard resolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Resolver for multipart file upload Spring wrapper for apache fileupload -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="50000000" />
	</bean>

	<!-- TRANSACTION support transactional handling -->
	<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven />

	<!-- Creating TransactionManager Bean, since JDBC we are creating of type 
		DataSourceTransactionManager -->
	<!-- Use qualified name in Transactional annotation to select right transactionaManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="ct1" />
	</bean>
	<bean id="transactionManagerOwn"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceOwn" />
		<qualifier value="own" />
	</bean>
	<!-- TRANSACTION -->

	<!-- REST Controller handling configuration -->
	<!-- JSON media Converter -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="prefixJson" value="false" />
		<property name="supportedMediaTypes" value="application/json" />
	</bean>

	<!-- XML media converter -->
	<bean id="xmlMessageConverter"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
		<property name="supportedMediaTypes" value="application/xml" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter" />
				<ref bean="xmlMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- REST Controller handling configuration -->

	<!-- DataBase configuration -->
	<bean id="certificateDAO" class="cci.repository.cert.JDBCCertificateDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="purchaseDAO" class="cci.repository.purchase.JDBCPurchaseDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="fscertificateDAO" class="cci.repository.fscert.JDBCFSCertificateDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="employeeDAO" class="cci.repository.staff.JDBCEmployeeDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@//192.168.0.4:1521/dbtest" />
		<!-- property name="url" value="jdbc:oracle:thin:@//192.168.0.46:1521/pdborcl"/ -->
		<!-- property name="url" value="jdbc:oracle:thin:@//192.168.0.72:1521/pdborcl"/ -->
		<!-- property name="url" value="jdbc:oracle:thin:@//192.168.0.10:1521/orclpdb"/ -->
		<property name="username" value="beltpp" />
		<property name="password" value="123456" />
	</bean>


	<!-- Database OwnCertificates -->
	<bean id="owncertificateDAO" class="cci.repository.owncert.JDBCOwnCertificateDAO">
		<property name="dataSource" ref="dataSourceOwn" />
	</bean>


	<bean id="dataSourceOwn" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/owncert?useServerPrepStmts=false&amp;rewriteBatchedStatements=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;" />
		<property name="username" value="cert" />
		<property name="password" value="123456" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>

	<!-- Database Security <bean id="securityDAO" class="cci.repository.security.JDBCSecurityDAO"> 
		<property name="dataSource" ref="dataSource"/> </bean> -->

	<!-- Security configuration -->
	<security:http auto-config="false" use-expressions="true">
		<!-- security:intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" 
			/ -->
		<security:access-denied-handler
			error-page="/403" />
		<security:intercept-url pattern="/resources/**"
			access="permitAll" requires-channel="https" />
		<security:intercept-url pattern="/check.**"
			access="permitAll" requires-channel="https" />
		<security:intercept-url pattern="/login*.**"
			access="permitAll" requires-channel="https" />
		<security:intercept-url pattern="/ccclient*.do"
			access="hasRole('ROLE_CLIENT')" />
		<security:intercept-url pattern="/cert*.do"
			access="hasAnyRole('ROLE_EXPERT','ROLE_MINSK', 'ROLE_GOMEL', 'ROLE_VITEBSK', 'ROLE_GRODNO', 'ROLE_MOGILEV', 'ROLE_BREST','ROLE_MNS')" />
		<security:intercept-url pattern="/owncert*.do"
			access="hasAnyRole('ROLE_EXPERT','ROLE_MINSK', 'ROLE_GOMEL', 'ROLE_VITEBSK', 'ROLE_GRODNO', 'ROLE_MOGILEV', 'ROLE_BREST','ROLE_MNS')" />
		<security:intercept-url pattern="/pch*.do"
			access="hasRole('ROLE_ACCOUNT')" />
		<security:intercept-url pattern="/**"
			access="isFullyAuthenticated()" requires-channel="https" />

		<security:form-login 
		    login-processing-url="/j_spring_security_check"
			login-page="/login.do" 
			authentication-failure-url="/login.do?login_error=true" 
			default-target-url="/certs.do" 
			username-parameter="j_username"  
			password-parameter="j_password" 
            authentication-failure-handler-ref="loginExceptionHandler" />
			
        
		<security:logout delete-cookies="JSESSIONID"
			logout-url="/logout.do" logout-success-url="/login.do" />
		<!-- security:csrf/ -->
		<security:http-basic />
		<!-- security:remember-me/ -->
		
  		<!-- Concurrent Session Control -->
  		<security:session-management invalid-session-url="/login.do">
             <security:concurrency-control 
                      max-sessions="1"   
                      error-if-maximum-exceeded="true" 
                      expired-url="/login.do"/>
        </security:session-management>
        
	</security:http>
    
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from users where username=?"
				authorities-by-username-query="select username, authority from authorities where username =?  " />
		</security:authentication-provider>
	</security:authentication-manager>

  <!-- Concurrent Session Control --> 
  <!-- http>
		 <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
         <custom-filter position="FORM_LOGIN_FILTER" ref="myAuthFilter" />
         <session-management session-authentication-strategy-ref="sas"/>
  </http >
  
  <bean id="concurrencyFilter"
      class="org.springframework.security.web.session.ConcurrentSessionFilter">
    <property name="sessionRegistry" ref="sessionRegistry" />
    <property name="expiredUrl" value="/session-expired.htm" />
  </bean>

  <bean id="myAuthFilter"
      class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
    <property name="sessionAuthenticationStrategy" ref="sas" />
    <property name="authenticationManager" ref="authenticationManager" />
  </bean>

  <bean id="sas"
        class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <property name="maximumSessions" value="1" />
  </bean -->
  <!-- end session concurrent --> 

  <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  <bean id="loginExceptionHandler" class="cci.web.controller.LoginExceptionHandler" /> 
</beans>